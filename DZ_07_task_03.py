"""Реализовать программу работы с клетками. Необходимо создать класс Клетка. В его
конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
В классе должны быть реализованы методы перегрузки арифметических операторов:
сложение ( __add__() ), вычитание ( __sub__() ), умножение ( __mul__() ), деление ( __truediv__()) .
Данные методы должны выполнять увеличение, уменьшение, умножение и обычное (не
целочисленное) деление клеток, соответственно. В методе деления должно осуществляться
округление значения до целого числа.
В классе необходимо реализовать метод make_cell(), принимающий экземпляр класса и
количество клеток в ряду. Метод должен возвращать строку виду * ****\n*****\n*****. .., где
количество клеток между \n равно переданному аргументу, а количество рядов определяется,
исходя из общего количества клеток.
При создании экземпляра клетки должна происходить перезапись параметра, который хранит
количество клеток."""


class Cell:
    def __init__(self, quan_c):
        self.quan_c = quan_c        # количество клеток quantity cell

    def __add__(self, other):
        return self.quan_c + other

    def __sub__(self, other):
        return self.quan_c - other

    def __mul__(self, other):
        return self.quan_c * other

    def __truediv__(self, other):
        return round(self.quan_c / other)

    def make_cell(self, cell_in_row):       # количество клеток в ряду
        self.cell_fall = ""
        while self.quan_c > 0:
            self.quan_c -= cell_in_row
            if self.quan_c < 0:
                self.cell_fall += ("*" * (cell_in_row + self.quan_c) + "\n")
            else:
                self.cell_fall += ("*" * cell_in_row + "\n")
        return self.cell_fall

    def __call__(self, new_quan_c):
        self.quan_c = new_quan_c


c = Cell(52)                # введите количество клеток
print(c.make_cell(10))      # количество клеток в ряду
print(c+15)
c(99)
print(c.quan_c)
print(c/2)


